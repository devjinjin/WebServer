@page "/video/Play"
@using Microsoft.AspNetCore.SignalR.Client
@inject NavigationManager NavigationManager
@implements IDisposable
<div class="roomCreate">
    <label for="name">Room Name:</label>
    <input type="text" id="roomNameTxt" @bind=userInput />
    <button id="createRoomBtn" @onclick="@MakeRoom">Create</button>
</div>

<div>
    <table id="roomTable" class="display" style="width:100%;">
        <thead>
            <tr>
                <th>Room ID</th>
                <th>Name</th>
                <th></th>
            </tr>
        </thead>
        <tbody>
        </tbody>
    </table>
</div>

<div class="borderLine"></div>

<div>
    <div class="connectionStatus">
        <p id="connectionStatusMessage">*You can create your own room or join the other room.</p>
    </div>
    <h5>Video chat</h5>
    <div class="videoArea">
        <video id="localVideo" autoplay playsinline></video>
        <video id="remoteVideo" autoplay playsinline></video>
    </div>

    <h5>File sharing</h5>
    <div id="fileShare">
        <input type="file" id="fileInput">
        <button id="sendFileBtn" class="sendFileBtn">Send</button>
    </div>
    <table id="fileTable" class="fileTable">
        <thead>
            <tr>
                <th>Received Files</th>
            </tr>
        </thead>
        <tbody>
        </tbody>
    </table>
</div>
@code {


    private HubConnection hubConnection;
    private List<string> messages = new List<string>();
    private string userInput;
    private string messageInput;

    protected override async Task OnInitializedAsync()
    {
        hubConnection = new HubConnectionBuilder()
            .WithUrl(NavigationManager.ToAbsoluteUri("/WebRTCHub"))
            .Build();

        hubConnection.On<string, string>("ReceiveMessage", (user, message) =>
        {
            var encodedMsg = $"{user}: {message}";
            messages.Add(encodedMsg);
            StateHasChanged();
        });

        await hubConnection.StartAsync();
    }

    public void MakeRoom()
    {
        hubConnection.SendAsync("CreateRoom", userInput);
    }

    //Task Send() =>
    //hubConnection.SendAsync("SendMessage", userInput, messageInput);

    public bool IsConnected =>
        hubConnection.State == HubConnectionState.Connected;

    public void Dispose()
    {
        _ = hubConnection.DisposeAsync();
    }

}
